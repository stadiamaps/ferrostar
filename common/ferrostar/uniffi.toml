[bindings.swift]
generate_codable_conformance = true

[bindings.swift.custom_types.Uuid]
type_name = "UUID"
into_custom = "UUID(uuidString: {})!"
from_custom = "{}.uuidString"

[bindings.kotlin.custom_types.Uuid]
# Eventually we can transition to the Kotlin stdlib type,
# but this was only just added in Kotlin 2.0.20 (Aug 2024) and is marked experimental.
# See https://kotlinlang.org/api/latest/jvm/stdlib/kotlin.uuid/-uuid/.
type_name = "java.util.UUID"
into_custom = "java.util.UUID.fromString({})"
from_custom = "{}.toString()"

[bindings.swift.custom_types.UtcDateTime]
type_name = "Date"
into_custom = "Date(timeIntervalSince1970: Double({}) / 1000.0)"
from_custom = "Int64({}.timeIntervalSince1970 * 1000)"

[bindings.kotlin.custom_types.UtcDateTime]
type_name = "java.util.Date"
into_custom = "java.util.Date({})"
from_custom = "{}.time"
